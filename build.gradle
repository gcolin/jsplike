buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
    }
}

plugins {
	id "org.nosphere.apache.rat" version "0.2.2"
}

description = """Enhanced JSP that compile EL expressions"""

allprojects {
	
	apply plugin: 'java'
        apply plugin: 'maven'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'findbugs'
	apply plugin: 'jacoco'
	apply plugin: 'pmd'
	apply plugin: 'checkstyle'
	apply plugin: 'com.github.hierynomus.license'
	
	license {
	    header rootProject.file('config/HEADER')
	    exclude '**/*.properties'
	    exclude '**/*.txt'
	    exclude '**/*.xml'
	    exclude '**/*.jsp'
	    exclude '**/*.js'
	    exclude '**/*.html'
        exclude '**/*.tld'
	    exclude '**/META-INF/services/**'
	}
	
	group = 'net.gcolin'
    version = '1.0'
	
    install.repositories.mavenInstaller.pom.project {
	    inceptionYear '2015'
		developers {
			developer {
				name "Gael COLIN"
			}
		}
	    licenses {
	       license {
	          name 'The Apache Software License, Version 2.0'
	          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	          distribution 'manual'
	       }
	    }
	}

	rat {

	    excludes = [ '**/build/**','**/bin/**','**/.gradle/**','**/.classpath','**/.project',,'**/.settings/**',
	    '**/*.iml', '**/*.ipr','**/*.iws','gradle.properties','gradlew','gradlew.bat', '**/target/**',
	    '**/gradle/**','README.md','settings.gradle','build.gradle','FindBugsFilter.xml','**/config/**',
	    '**/*.jsp', '**/*.xml', '**/*.txt', '**/*.properties','**/META-INF/**', '**/*.html', '**/*.js' ]
	
	}
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}
	
	tasks.withType(FindBugs) {
		excludeFilter rootProject.file("FindBugsFilter.xml")
		reports {
			xml.enabled false
			html.enabled true
		}
	}
	
	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}

	checkstyle {
		toolVersion = "7.1.1"
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
	}
	
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
	}

	dependencies {
		compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
	    compile group: 'javax.el', name: 'javax.el-api', version:'3.0.0'
	    compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version:'2.3.1'
	    compile group: 'net.gcolin', name: 'common', version:'1.0'
	    testCompile group: 'junit', name: 'junit', version:'4.11'
	    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
	    testCompile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.21'
	    testCompile group: 'jstl', name: 'jstl', version:'1.2'
	    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.7'
	}
}

project(':jsplike-ecj') {
	description = """Compile with the Eclipse Java Compiler"""

	dependencies {
		compile rootProject
		compile group: 'org.eclipse.jdt.core.compiler', name: 'ecj', version:'4.5.1'
	}
}

project(':jsplike-javac') {
	description = """Compile with Javac command"""

	dependencies {
		compile rootProject
	}
}

project(':war-optimizer') {
	description = """Optimize a war or a jar"""

	dependencies {
		compile rootProject
		compile group: 'org.jsoup', name: 'jsoup', version:'1.8.3'
		compile group: 'com.google.javascript', name: 'closure-compiler', version:'v20150729'
	}
}

project(':war-optimizer-gradle-plugin') {
	apply plugin: 'groovy'

	description = """Optimize a war or a jar"""

	dependencies {
		compile project(':war-optimizer')
		compile project(':jsplike-javac')
		compile gradleApi()
    	compile localGroovy()
	}
}
